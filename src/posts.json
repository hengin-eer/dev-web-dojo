[{"id":"1","title":"Web道場をリリースしました","author":"hengineer","date":"3/12 2023","category":"news","slug":"web-dojo-released","content":"\n\n# ウェブサイトの作り方を学べるサイト「Web道場」をリリースしました\n\nどうも、へんじにあ[@tim_daik](https://twitter.com/tim_daik)です\n\n今回は私の個人プロジェクト兼、[NITACwpl](https://nitacwpl.tech)のコンテンツとして**Web道場**をリリースしました\n\n技術選定やプロジェクト管理の不備のせいで約半年かけて開発をしました\n\nリリース記念ということで\n\n- Web道場とは何か\n- 今後追加予定のコンテンツについて\n- Web道場に使われている技術\n\nをそれぞれ説明していこうと思います\n\n## Web道場とは何か\n\nWeb道場とは**ウェブサイトの作り方を段階的に学べるサイト**です\n\nこの「段階的に学べる」ということについて話していきましょう\n\nウェブサイトの作り方を学べる有名なサイトとして[Progate](https://prog-8.com)などがあります\n\nHTML/CSSの学習では段階的に学べるコースが用意されていますが、これらのサイトに`JavaScript`を追加してサイトをアップグレードしていく、なんてコースは用意されていません\n\n勿論それぞれの分野を個別に学習することも悪くありませんが、**初心者にとって楽しく、分かりやすく学習する**にはどうしようかと考えました\n\nその結果が「段階的に学んでいく」という方法です\n\nWeb道場では以下のようなコース構成で学習していきます\n\n- チュートリアル\n  - ウェブサイトを作るための準備。基本知識や環境構築をサクッとやって、はじめてのウェブサイトを作成する\n- HTML/CSS\n  - はじめて作ったウェブサイトをアップグレードしながら`HTML/CSS`の使い方を学んでいく\n- JavaScript\n  - アップグレードしたウェブサイトに`JavaScript`で機能を追加して完成させる\n\n基本構成はこんな感じです\n\n最初は簡単なウェブサイトをサクッと作って、その後段階的に学習した知識を使ってアップグレードしていくなんて**ワクワクしませんか？**\n\nただこの記事を執筆している2023年3月現在、全ての記事を執筆しきれていない為、順次公開していきたいと思います！\n\n**記事の更新情報はNITACwplのTwitter公式アカウントでお知らせしていくので、是非ともフォローよろしくお願いします！！**\n\n気になったことなどはお問い合わせでお気軽にご連絡ください！！\n\n## 今後追加予定のコンテンツについて\n\n先ほど挙げた基本コースの準備だけでもかなりキツイですが、これらに加えて新しいコースの準備も考えていますので、先行公開しておきます！\n\n- Sass/Node.js\n  - `Node.js`をインストールしてモダン開発を始めてみよう！\n  - CSSを効率的に書くことのできる`Sass`を導入しよう！\n\n「え？こんだけ？」と思う方もいらっしゃるかもしれませんが、もちろんこれだけでありません\n\nただまだ検討段階で、実装する自身が無いためこれだけの紹介とさせていただきます\n\n**内容はまだ考えていませんが、`React`や他のJavaScriptフレームワーク、`tailwind css`とかも考えているよーとだけお伝えします**\n\n## Web道場に使われている技術\n\n今回のWeb道場をリリースするのに半年以上もかかった理由として、**技術選定が非常におろそかだった**ことが挙げられます\n\nここでは**今使われている技術**と**過去のプロトタイプで使用した・今後検討している技術**をそれぞれご紹介していきます\n\n## 今使われている技術\n\nこのサイトで使われている技術をそれぞれリスト形式で説明します\n\n- React(CRA)\n  - `CRA（create-react-app）`で立ち上げたウェブアプリからこのサイトを作成しました\n  - 個人的には`React`の学習も兼ねていたので`CRA`を採用しています\n- react-router-dom\n  - ページのルーティングに採用しています\n  - 個人的に躓いた点は`path`にパラメータを渡すときの処理で、カテゴリを表示するときや、それぞれの記事を`slug`で表示するのが少し詰まりました\n- react-markdown\n  - `markdow`を`HTML`に変換してくれる\n  - それぞれのタグに独自のコンポーネントを割り当てられるので、目次生成に利用している\n- react-syntax-highlighter\n  - 手軽にソースコードをハイライトすることが出来る\n  - ファイル名の表示・ソースコードのコピー機能を追加するためにコンポーネントを作成して、`react-markdown`にぶち込むという工夫をした\n- rehype-raw\n  - markdown記法に加えてHTMLを書けるようにするために`react-markdown`のプライグインとして用いた\n- Scss\n  - このサイト、`React`だけでなく`Sass`の学習も兼ねていたので採用\n  - ネスト記法、変数、`@mixin`など基本的な使い方は覚えたが、スタイルが似通っているのに個別にスタイルを書いている部分が多いので、今後スタイルの再利用によりパフォーマンスを改善していきたい\n- JSON\n  - 今まであまり扱ってこなかったが、今回嫌というほど触ったファイル\n  - 記事データは自動でJSONを生成してくれるが、カテゴリデータ等は自分でいちいち書き直しているので煩わしい\n\n使用技術はこんな感じです\n\nなんだかボリュームが増えてきたので、ブログ記事に移植しましょうかね\n\n## 過去のプロトタイプで使用した・今後検討している技術\n\nそれではこれまで使用してきた、そして今後検討している技術をそれぞれお話していきます\n\n### HTML/CSS/JS の静的サイト構成\n\nこれは私が本当に始めたばかりの頃の構成です\n\n「HTMLファイルを作ってCSSでスタイルを当てて、JavaScriptを追加したらサイトは出来る！」と考えていた時期だったので（たしかに出来ないことは無いが…）、早速`index.html`と`style.css`を作って開発を始めました\n\nしかし、残念なことに私が作りたいブログ的な機能を作るには、あまりにも気が遠くなる作業だと途中で気づきました\n\n`Ajax`を使って部分的にコンポーネント化しましたが、それぞれの記事をいちいちHTMLで書いていては、Web道場が完成する前に死んでしまう！！\n\nということでブログを作るためにはどうすればいいのか？というのを探し始めて、`Django`に辿り着きました…\n\n…\n\n思ったよりもボリュームが膨れ上がってしまったので、**この内容はブログに別記事として投稿しようと思います**\n\nなんたってこの記事を書いている今日中にWeb道場をデプロイしなければならないからです！\n\n**近日中に公開するので、是非[NITACwpl](https://nitacwpl.tech)をフォローして、見に来てください！！**\n\n## まとめ\n\n今回はWeb道場リリースのお知らせとWeb道場に関する情報をお伝えしました\n\nリリースでひと段落かと思いきや、つぎは記事作成に追われるのか…頑張ります！！\n\nWeb道場では**無料でウェブサイトの作り方を段階的に学べます**\n\n会員登録なども不要ですぐに学べますので**是非、シェアして拡散してください**\n\n[Web道場で稽古を始める！](https://web-dojo.nitacwpl.tech/courses)\n\n[お問い合わせはこちら](https://docs.google.com/forms/d/e/1FAIpQLSerzLp6he7eKAoQkf-Whf8yIiYErMEfk-DFXxAi2NBrDF-ewA/viewform)\n"},{"id":"1","title":"チュートリアル","author":"hengineer","date":"9/27, 2022","category":"html-css","slug":"チュートリアル","content":"\n# HTMLの世界へようこそ\n\nこんにちは。 今回執筆を主に担当させていただきます、へんじにあ[@tim_daik](https://twitter.com/tim_daik)です\n\n**Webサイトを作成する中で最も基本的かつ必要なスキルが`HTML`です**\n\nこのコースで皆さんにはHTMLを習得してもらいます\n\nこれからHTMLの学習をしていってもらうのですが、プログラミングを触ったことが無かったり、HTMLに触れたことがない人も多いかと思いますので、まずはHTMLについて学んでいきましょう\n\n## ウェブページはどうやって作られているのか\n\nウェブページを作れるようになるには、そもそもどのようにしてウェブページが作られているのかを理解する必要があります\n\n## HTMLとは？\n\n`HTML`とは「HyperText Markup Language」の略称で、マークアップ言語のひとつです\n\nHTMLでは文章を`<p>`のような「タグ」と「タグ」で囲い記述していきます\n\n>マークアップ言語とは、視覚表現や文章構造を記述するための形式言語です\n>\n>つまりHTMLは正式にはプログラミング言語に該当しないということになります\n\n## HTMLの記法\n\n### タグとは？\n\nHTMLの記法を理解する上で「**タグ**」というものがあります\n\nタグとは`<p>`のような山括弧に囲われた特殊な文字列で、文章をタグで囲むことによって要素として扱うことが出来ます\n\n## ひな型\n\n先ほどのようにHTMLを記述していくためには雛形の中に書き込んでいく必要があります\n\n雛形を下に記します\n\n```html:template.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Document</title>\n</head>\n<body>\n    <!-- ここに記述していく -->\n</body>\n</html>\n```\n\nそれぞれのタグについて軽く解説していきます\n\n- `<!DOCTYPE html>`: ドキュメントの種類が`HTML`だと宣言しています\n- `<html lang=\"en\">`: HTMLを記入していくには`<html></html>`で囲う必要があります 属性の`lang`には言語を入れますので日本語であれば`ja`を記入します\n- `<head>`: このタグの中に`<meta />`を入れていきます それぞれページのタイトルや説明、読み込むcssファイルなどの情報を書いていきます\n- `<body>`: コメントにあるとおりこの中に記述されているタグが画面に表示されていく部分になります\n\nご覧の通り少しコードの量がありますので初心者の方にはこれだけでも苦痛になるかと思います\n\nそこで`VScode`を利用している方は言語モードを`html`に選択後、`!`を入力するだけで補完機能から入力できるかと思います\n\n## コメントアウト\n\nコードを記述していく際に**ちょっとしたメモ・注意点を残したり**、**一部のコードを無効化したいけどコードを消したくない**といったことがしばしばあります\n\nそんな期待に応えてくれる「**コメントアウト**」がほとんどの言語に備わっています\n\nただ、言語によってコメントアウトの記述の仕方は若干違いますので、混同しないように注意しましょう\n\nHTMLでは`<!--  -->`でコードを囲うことでコメントアウトすることが出来ます\n\n```html:html\n<h1>Title</h1>\n<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo</p>\n<!-- <p>The quick, brown fox jumps over a lazy dog. DJs</p> -->\n\n<!-- この中がコメントアウトされるコード -->\n```\n\nこれでコードは無効化することが出来ています\n\nしかしHTMLの場合いちいちコードのコメントアウトを記述するのは疲れます\n\nそこで`VScode`を使用している方は任意のコード上にカーソルがフォーカスされていることを確認し、`Ctrl + /`を入力するだけでコメントアウト及びコメントアウトの解除を行うことが出来ます\n\n🚧building...\n"},{"id":"1","title":"Web道場へようこそ","author":"hengineer","date":"3/15, 2023","category":"tutorial","slug":"Web道場へようこそ","content":"\n\n# Web道場へようこそ\n\nWeb道場では初心者が自分のウェブサイトを作れるようになるためのコースを用意しています\n\nこのチュートリアルコースではウェブサイトを作るための準備、実際の製作、サイトの公開まで行います\n\n初心者にとってはボリュームが多いかもしれませんが、それよりもウェブサイトを作る楽しさが勝ることかと思います\n\n## Web道場の稽古の流れ\n\nWeb道場では以下の手順でウェブページ作りを学びます\n\n- ウェブサイトの基礎知識の理解から環境構築、ウェブサイトの公開まで\n- HTML/CSSの学習をしながら本格的なサイトを製作する\n- 上で作ったサイトにJavaScriptで機能を追加していき、ウェブサイトを完成させる\n- Sass/Node.jsを用いたモダンな開発環境で新たなウェブページを制作する\n\n今後、新しいコースの追加を検討していますが、基本的にここまでやり切れたのであれば、中級者への階段に足を踏み入れたことになるでしょう\n\n現代においてウェブサイトは重要な存在になっています\n\nウェブサイト製作を営利目的のみでやることなく、ウェブサイト製作を楽しんでやってもらえたら幸いです\n\n## 学習の進め方について\n\nWeb道場での学習の進め方を軽く説明します\n\n### Web道場の活用方法\n\nWeb道場に用意している機能についてお話しします\n\nWeb道場には目次機能を用意しています\n\nまた、タブレット、スマホの場合は以下のように表示されています\n\nそれぞれ見出しのリンクがリストでありますので、この機能を有効活用してください\n\n### 詳しい仕様などの説明は行いません\n\nWeb道場では基本的にコース通りに進めていけば学習に問題ないですが、そこまで丁寧な説明を行わないつもりです\n\nこれにはいくつか理由があって\n\n- ウェブサイト製作を楽しく学ぶというコンセプトに反している\n- 初心者の学習コストが大幅にアップする\n- 詳しい説明や仕様は公式ドキュメントを参照すれば事足りる\n- 情報は既にネット上に溢れている（そのためググれば直ぐ分かる）\n\nということです\n\nそのため、公式ドキュメントや分かりやすく説明しているサイトをまとめたブログ記事を今後公開しますので、そちらをご参照ください\n"},{"id":"2","title":"タグの種類1","author":"hengineer","date":"11/28, 2022","category":"html-css","slug":"タグの種類1","content":"\n# タグについて学ぼう\n\n`HTML`にはウェブページを構成するための多大な種類のタグが存在します\n\nそしてHTMLが持つタグの種類は**2022年11月現在、108種類**となっています\n\nしかし実際にすべてのタグを使用する。なんてことはありません\n\nそこでこれから3回のパートに分けてHTMLのタグについて説明していこうと思います\n\n少し覚えるのに苦労するかもしれませんが、徐々に慣れてくるはずです！\n\n## web制作に欠かせないタグを学ぼう\n\nここからweb制作において必須レベルのタグを紹介していきます\n\n**実際にどのような場面で使うか**、**どのようなルールがあるのか**などに注目して学習していきましょう\n\n## h1~h6タグ: 見出し\n\n**hタグは見出しを表すタグ**で、1～6段階まで強さがあり数字が大きいほど**見出しの重要度**、**デフォルトのフォントサイズ**が大きい\n\n> 注意してほしい点は、**hタグでフォントのレイアウトをしないようにする**ことである\n>\n> フォントのレイアウト等はHTMLのデフォルトのスタイルに依存せず、必ずCSSによって定義するように心がける\n\n## pタグ: 段落\n\n**pタグは段落を表すタグ**で、主に文章に使われます\n\n恐らく文章を沢山書かれる方はこのタグを使用する頻度が多いかと思われます\n\n実はタグで括らずに直接文章をHTML内に記述しても表示はされますが、タグで括らないと意味をもつ要素にはならないので必ずタグで囲うようにします\n\n## aタグ: リンク\n\n**aタグはリンクを表すタグ**で、リンクを埋め込む際に使われます\n\nこのタグでは今までと少し違い、特有の「**属性**」を持っています\n\n**`href`属性にリンク先のurl等を追加する**ことで指定したリンクに飛ぶことが出来ます\n\n```html:html\n<a href=\"リンク先のURL\" target=\"_blank\" rel=\"noreferrer\">画面に表示される文章</a>\n```\n\n`target`に`_blank`を指定することで別タブでリンクを開けるようになりますが、`_blank`にはセキュリティ、パフォーマンスの2点に問題があるので`rel=\"noreferrer\"`でリンク先でリンク元を参照できないようにして対策をしています\n\n> 注意書きですが、どのタグにも「属性」は存在します\n>\n> 例の1つが`class`属性です\n>\n> `class`はCSSでスタイル定義の対象を判断する際などに使われ、特定のclassに属している要素として扱うことが可能になります\n\n## ul/ol, liタグ: リスト\n\n**ul,olタグはリストを、liタグはそれらのアイテムを表すタグ**で、それぞれリストを表示したい際に使われますが、２つには当然違いがあります\n\n### ul\n\nulは「unordered list（順序不同リスト）」の略で、その名の通り順序のないリストを表示したい際に使われます\n\n### ol\n\nolは「ordered list（順序リスト）」の略で、その名の通り順序通りのリストを表示したい際に使われます\n\nそれぞれul, olの違いはありますが、両方ともliタグはそれぞれのタグの中に入れ子で記述します\n\n```html:html\n<ul>\n  <!-- ul, olのタグに入れ子で記述 -->\n  <li>HTML</li>\n  <li>CSS</li>\n  <li>JavaScript</li>\n</ul>\n```\n\n🚧building...\n"},{"id":"3","title":"CSS入門","author":"hengineer","date":"9/28, 2022","category":"html-css","slug":"CSS入門","content":"\n\n# CSS入門\n\nWebページを構成する為の要素のうち、骨組みの役割である`HTML`を学習してきました\n\n次にWebページの装飾の役割である`CSS`について理解していきましょう\n\n🚧building...\n"}]